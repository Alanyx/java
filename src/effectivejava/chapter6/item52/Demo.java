package effectivejava.chapter6.item52;

/**
 * @author yinxing
 * @date 2019/9/11
 */

public class Demo {

    /**
     * 如果 API 的用户不知道将为给定的参数集调用多个方法重载中的哪一个，则使用 API 可能会导致错误。
     * 这些错误很可能表现为运行时的不稳定行为，许多程序员很难诊断它们。 因此，应该避免混淆使用重载
     */

    /**
     * 究竟是什么构成了重载的混乱用法还有待商榷。一个安全和保守的策略是永远不要导出两个具有相同参数数量的重载。
     * ======>因为总是可以为方法赋予不同的名称，而不是重载它们。
     */

    /**
     * 总而言之，仅仅可以重载方法并不意味着应该这样做。
     * a.通常，最好避免重载具有相同数量参数的多个签名的方法。
     * b.在某些情况下，特别是涉及构造方法的情况下，可能无法遵循此建议。在这些情况下，至少应该避免通过添加强制转换将相同的参数集传递给不同的重载。
     * c.如果这是无法避免的，例如，因为要对现有类进行改造以实现新接口，那么应该确保在传递相同的参数时，所有重载的行为都是相同的。(如 String 类的contentEquals()方法)
     * 如果做不到这一点，程序员将很难有效地使用重载方法或构造方法，也无法理解为什么它不能工作。
     */
}
