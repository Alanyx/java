package effectivejava.chapter5.item42;

/**
 * @author yinxing
 * @date 2019/9/9
 */

public class Demo {

    /**
     * 与方法和类不同，lambda 没有名称和文档; 如果计算不是自解释的，或者超过几行，则不要将其放入 lambda 表达式中。
     *
     * 一行代码对于 lambda 说是理想的，三行代码是合理的最大值。
     * 如果违反这一规定，可能会严重损害程序的可读性。 如果一个 lambda 很长或很难阅读，要么找到一种方法来简化它或重构你的程序来消除它。
     *
     * 此外，传递给枚举构造方法的参数在静态上下文中进行评估。
     * 因此，枚举构造方法中的 lambda 表达式不能访问枚举的实例成员。
     * 如果枚举类型具有难以理解的常量特定行为，无法在几行内实现，或者需要访问实例属性或方法，那么常量特定的类主体仍然是行之有效的方法。
     */

    /**
     * 从 Java 8 开始，lambda 是迄今为止表示小函数对象的最佳方式。
     * 除非必须创建非函数式接口类型的实例，否则不要使用匿名类作为函数对象。
     * 另外，请记住，lambda 表达式使代表小函数对象变得如此简单，以至于它为功能性编程技术打开了一扇门，这些技术在 Java 中以前并不实用。
     */
}
