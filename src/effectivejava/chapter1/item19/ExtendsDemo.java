package effectivejava.chapter1.item19;

/**
 * @author yinxing
 * @date 2019/8/23
 */

public class ExtendsDemo {

    /**
     * 首先，这个类必须准确地描述重写这个方法带来的影响。
     *    --> 一个类必须文档说明任何可能调用可重写方法的情况。
     *    @implSpec: 调用可重写方法的方法在文档注释结束时包含对这些调用的描述。这些描述在规范中特定部分，标记为“Implementation Requirements”
     */

    /**
     * 测试为继承而设计的类的唯一方法是编写子类
     * 因此， 在发布它之前，你必须通过编写子类来测试你的类。
     */

    /**
     * 还有一些类必须遵守允许继承的限制。 构造方法绝不能直接或间接调用可重写的方法(即非 private 方法)。
     */

    /**
     * 在没有想要安全地子类化的设计和文档说明的类中，最好办法是禁止子类化。 有两种方法禁止子类化。
     * - 两者中较容易的是声明类为 final。
     * - 另一种方法是使所有的构造方法都是私有的或包级私有的，并且添加公共静态工厂来代替构造方法。
     * 这个方案在内部提供了使用子类的灵活性，在条目 17 中讨论过。两种方法都是可以接受的
     */
}
