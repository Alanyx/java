package effectivejava.chapter7.item66;

/**
 * @author yinxing
 * @date 2019/9/17
 */

public class Demo {

    /**
     * 本地方法主要有三种用途。
     * a.提供对特定于平台的设施（如注册中心）的访问。
     * b.提供对现有本地代码库的访问，包括提供对遗留数据访问。
     * c.可以通过本地语言编写应用程序中注重性能的部分，以提高性能。
     */

    /**
     * 为了提高性能，很少建议使用本地方法。
     * ====>JVM 变得更快了,对于大多数任务，可以在 Java 中获得类似的性能
     */

    /**
     * 使用本地方法有严重的缺点。
     * a.本地语言不安全（详见第 50 条），使用本地方法的应用程序不再能免受内存毁坏错误的影响。
     * b.由于本地语言比 Java 更依赖于平台，因此使用本地方法的程序的可移植性较差。
     * c.它们也更难调试。如果不小心，本地方法可能会降低性能，因为垃圾收集器无法自动跟踪本地内存使用情况（详见第 8 条），而且进出本地代码会产生相关的成本。
     * d.最后，本地方法需要「粘合代码」，这很难阅读，而且编写起来很乏味。
     */

    /**
     * 总之，在使用本地方法之前要三思。一般很少需要使用它们来提高性能。
     * 如果必须使用本地方法来访问底层资源或本地库，请尽可能少地使用本地代码，并对其进行彻底的测试。
     * 本地代码中的一个错误就可以破坏整个应用程序。
     */

}
